{"ast":null,"code":"var _jsxFileName = \"/Users/zohaibkhan/Desktop/Education/General_Assembly/SEI/unit_2/week_3/Proj_2/NBA-Trivia/nba-trivia-app/src/Game.js\";\nimport React, { useState, useEffect, useParams } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport \"./Game.css\";\nimport AnswerChoices from \"./AnswerChoices\";\n\nconst Game = props => {\n  //All State Values that will be changed\n  const [playerOneStatsInfo, setPlayerOneStatsInfo] = useState([]);\n  const [playerTwoStatsInfo, setPlayerTwoStatsInfo] = useState([]);\n  const [PlayerOneMetrics, setPlayerOneMetrics] = useState([]);\n  const [PlayerTwoMetrics, setPlayerTwoMetrics] = useState([]);\n  const [playerOneGif, setPlayerOneGif] = useState(\"\");\n  const [playerTwoGif, setPlayerTwoGif] = useState(\"\");\n  const [count, setCounter] = useState(1);\n  const [score, setScore] = useState(0);\n  const [rightDivAnswer, setRightDivAnswer] = useState(\"\");\n  const [leftDivAnswer, setLeftDivAnswer] = useState(\"\");\n  const [ifClicked, setIfClicked] = useState(false);\n\n  const apiCallStatsPlayerOne = async () => {\n    try {\n      let randomNum = Math.floor(Math.random() * 400 + 1);\n      const dataStats = await axios.get(`https://www.balldontlie.io/api/v1/season_averages?player_ids[]=${randomNum}`);\n      console.log(dataStats.data.data[0].pts);\n      setPlayerOneStatsInfo(dataStats.data.data[0].pts);\n      const dataGeneralInfo = await axios.get(`https://www.balldontlie.io/api/v1/players/${randomNum}`);\n      let playerOneFirstName = dataGeneralInfo.data.first_name;\n      let playerOneLastName = dataGeneralInfo.data.last_name;\n      setPlayerOneMetrics(playerOneFirstName + \" \" + playerOneLastName);\n      console.log(playerOneFirstName + \" \" + playerOneLastName);\n      const gifData = await axios.get(`https://api.giphy.com/v1/gifs/search?api_key=cLVkasFAvpiN8CTvAkRlGkoBTskbN71s&q=${playerOneFirstName + \"-\" + playerOneLastName}&limit=25&offset=0&rating=G&lang=en`);\n      setPlayerOneGif(gifData.data.data[0].images.downsized.url); // console.log(gifData.data.data[0].url);\n    } catch (error) {\n      if (error instanceof TypeError) {\n        apiCallStatsPlayerOne();\n      } else {\n        setTimeout(function () {\n          apiCallStatsPlayerOne();\n        }, 30000);\n        console.log(error);\n      }\n    }\n  };\n\n  const apiCallStatsPlayerTwo = async () => {\n    try {\n      let randomNum = Math.floor(Math.random() * 400);\n      const data = await axios.get(`https://www.balldontlie.io/api/v1/season_averages?player_ids[]=${randomNum}`);\n      console.log(data.data.data[0].pts);\n      setPlayerTwoStatsInfo(data.data.data[0].pts);\n      const dataGeneralInfo = await axios.get(`https://www.balldontlie.io/api/v1/players/${randomNum}`);\n      let playerTwoFirstName = dataGeneralInfo.data.first_name;\n      let playerTwoLastName = dataGeneralInfo.data.last_name;\n      setPlayerTwoMetrics(playerTwoFirstName + \" \" + playerTwoLastName);\n      console.log(playerTwoFirstName + \" \" + playerTwoLastName);\n      const gifData = await axios.get(`https://api.giphy.com/v1/gifs/search?api_key=cLVkasFAvpiN8CTvAkRlGkoBTskbN71s&q=${playerTwoFirstName + \"-\" + playerTwoLastName}&limit=1&offset=0&rating=G&lang=en`);\n      console.log(gifData.data.data[0]);\n      setPlayerTwoGif(gifData.data.data[0].images.downsized.url);\n    } catch (error) {\n      if (error instanceof TypeError) {\n        apiCallStatsPlayerTwo();\n      } else {\n        setTimeout(function () {\n          apiCallStatsPlayerTwo();\n        }, 30000);\n        console.log(error);\n      }\n    }\n  };\n\n  const getPlayer = () => {\n    apiCallStatsPlayerOne();\n    apiCallStatsPlayerTwo();\n  };\n\n  const checkAnswerLeft = () => {\n    if (playerOneStatsInfo > playerTwoStatsInfo) {\n      setScore(score + 1);\n      setLeftDivAnswer(true);\n    } else {\n      setScore(score);\n      setLeftDivAnswer(\"\");\n    }\n  };\n\n  const checkAnswerRight = () => {\n    if (playerOneStatsInfo < playerTwoStatsInfo) {\n      setScore(score + 1);\n      setRightDivAnswer(true);\n    } else {\n      setScore(score);\n      setRightDivAnswer(\"\");\n    }\n  };\n\n  const clickEvent = () => {\n    setIfClicked(true);\n  };\n\n  useEffect(() => {\n    apiCallStatsPlayerOne();\n    apiCallStatsPlayerTwo();\n  }, []);\n\n  while (count < 10) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: `left-card  ${leftDivAnswer ? \"correct-answer\" : \"incorrect-answer\"}  `,\n      onClick: () => {\n        checkAnswerLeft();\n        clickEvent();\n      },\n      disabled: ifClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, PlayerOneMetrics), /*#__PURE__*/React.createElement(\"img\", {\n      src: playerOneGif,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: `right-card  + ${rightDivAnswer ? \"correct-answer\" : \"\"}`,\n      onClick: () => {\n        checkAnswerRight();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, PlayerTwoMetrics), /*#__PURE__*/React.createElement(\"img\", {\n      src: playerTwoGif,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, count), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, score)), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        getPlayer();\n        setCounter(count + 1);\n        setLeftDivAnswer(null);\n        setRightDivAnswer(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }\n    }, \"Next Question\"));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, \" Game Over\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/Results\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, \"See Results\")));\n};\n\nexport default withRouter(Game);","map":{"version":3,"sources":["/Users/zohaibkhan/Desktop/Education/General_Assembly/SEI/unit_2/week_3/Proj_2/NBA-Trivia/nba-trivia-app/src/Game.js"],"names":["React","useState","useEffect","useParams","withRouter","axios","Link","AnswerChoices","Game","props","playerOneStatsInfo","setPlayerOneStatsInfo","playerTwoStatsInfo","setPlayerTwoStatsInfo","PlayerOneMetrics","setPlayerOneMetrics","PlayerTwoMetrics","setPlayerTwoMetrics","playerOneGif","setPlayerOneGif","playerTwoGif","setPlayerTwoGif","count","setCounter","score","setScore","rightDivAnswer","setRightDivAnswer","leftDivAnswer","setLeftDivAnswer","ifClicked","setIfClicked","apiCallStatsPlayerOne","randomNum","Math","floor","random","dataStats","get","console","log","data","pts","dataGeneralInfo","playerOneFirstName","first_name","playerOneLastName","last_name","gifData","images","downsized","url","error","TypeError","setTimeout","apiCallStatsPlayerTwo","playerTwoFirstName","playerTwoLastName","getPlayer","checkAnswerLeft","checkAnswerRight","clickEvent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useParams } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport \"./Game.css\";\nimport AnswerChoices from \"./AnswerChoices\";\n\nconst Game = (props) => {\n  //All State Values that will be changed\n  const [playerOneStatsInfo, setPlayerOneStatsInfo] = useState([]);\n  const [playerTwoStatsInfo, setPlayerTwoStatsInfo] = useState([]);\n  const [PlayerOneMetrics, setPlayerOneMetrics] = useState([]);\n  const [PlayerTwoMetrics, setPlayerTwoMetrics] = useState([]);\n  const [playerOneGif, setPlayerOneGif] = useState(\"\");\n  const [playerTwoGif, setPlayerTwoGif] = useState(\"\");\n  const [count, setCounter] = useState(1);\n  const [score, setScore] = useState(0);\n  const [rightDivAnswer, setRightDivAnswer] = useState(\"\");\n  const [leftDivAnswer, setLeftDivAnswer] = useState(\"\");\n  const [ifClicked, setIfClicked] = useState(false);\n\n  const apiCallStatsPlayerOne = async () => {\n    try {\n      let randomNum = Math.floor(Math.random() * 400 + 1);\n      const dataStats = await axios.get(\n        `https://www.balldontlie.io/api/v1/season_averages?player_ids[]=${randomNum}`\n      );\n      console.log(dataStats.data.data[0].pts);\n      setPlayerOneStatsInfo(dataStats.data.data[0].pts);\n\n      const dataGeneralInfo = await axios.get(\n        `https://www.balldontlie.io/api/v1/players/${randomNum}`\n      );\n\n      let playerOneFirstName = dataGeneralInfo.data.first_name;\n      let playerOneLastName = dataGeneralInfo.data.last_name;\n\n      setPlayerOneMetrics(playerOneFirstName + \" \" + playerOneLastName);\n\n      console.log(playerOneFirstName + \" \" + playerOneLastName);\n\n      const gifData = await axios.get(\n        `https://api.giphy.com/v1/gifs/search?api_key=cLVkasFAvpiN8CTvAkRlGkoBTskbN71s&q=${\n          playerOneFirstName + \"-\" + playerOneLastName\n        }&limit=25&offset=0&rating=G&lang=en`\n      );\n\n      setPlayerOneGif(gifData.data.data[0].images.downsized.url);\n      // console.log(gifData.data.data[0].url);\n    } catch (error) {\n      if (error instanceof TypeError) {\n        apiCallStatsPlayerOne();\n      } else {\n        setTimeout(function () {\n          apiCallStatsPlayerOne();\n        }, 30000);\n        console.log(error);\n      }\n    }\n  };\n\n  const apiCallStatsPlayerTwo = async () => {\n    try {\n      let randomNum = Math.floor(Math.random() * 400);\n      const data = await axios.get(\n        `https://www.balldontlie.io/api/v1/season_averages?player_ids[]=${randomNum}`\n      );\n      console.log(data.data.data[0].pts);\n      setPlayerTwoStatsInfo(data.data.data[0].pts);\n\n      const dataGeneralInfo = await axios.get(\n        `https://www.balldontlie.io/api/v1/players/${randomNum}`\n      );\n\n      let playerTwoFirstName = dataGeneralInfo.data.first_name;\n      let playerTwoLastName = dataGeneralInfo.data.last_name;\n\n      setPlayerTwoMetrics(playerTwoFirstName + \" \" + playerTwoLastName);\n\n      console.log(playerTwoFirstName + \" \" + playerTwoLastName);\n\n      const gifData = await axios.get(\n        `https://api.giphy.com/v1/gifs/search?api_key=cLVkasFAvpiN8CTvAkRlGkoBTskbN71s&q=${\n          playerTwoFirstName + \"-\" + playerTwoLastName\n        }&limit=1&offset=0&rating=G&lang=en`\n      );\n      console.log(gifData.data.data[0]);\n\n      setPlayerTwoGif(gifData.data.data[0].images.downsized.url);\n    } catch (error) {\n      if (error instanceof TypeError) {\n        apiCallStatsPlayerTwo();\n      } else {\n        setTimeout(function () {\n          apiCallStatsPlayerTwo();\n        }, 30000);\n        console.log(error);\n      }\n    }\n  };\n\n  const getPlayer = () => {\n    apiCallStatsPlayerOne();\n    apiCallStatsPlayerTwo();\n  };\n\n  const checkAnswerLeft = () => {\n    if (playerOneStatsInfo > playerTwoStatsInfo) {\n      setScore(score + 1);\n      setLeftDivAnswer(true);\n    } else {\n      setScore(score);\n      setLeftDivAnswer(\"\");\n    }\n  };\n\n  const checkAnswerRight = () => {\n    if (playerOneStatsInfo < playerTwoStatsInfo) {\n      setScore(score + 1);\n      setRightDivAnswer(true);\n    } else {\n      setScore(score);\n      setRightDivAnswer(\"\");\n    }\n  };\n\n  const clickEvent = () => {\n    setIfClicked(true);\n  };\n\n  useEffect(() => {\n    apiCallStatsPlayerOne();\n    apiCallStatsPlayerTwo();\n  }, []);\n\n  while (count < 10) {\n    return (\n      <>\n        <div\n          className={`left-card  ${\n            leftDivAnswer ? \"correct-answer\" : \"incorrect-answer\"\n          }  `}\n          onClick={() => {\n            checkAnswerLeft();\n            clickEvent();\n          }}\n          disabled={ifClicked}\n        >\n          <h1>{PlayerOneMetrics}</h1>\n          <img src={playerOneGif}></img>\n        </div>\n\n        <div\n          className={`right-card  + ${rightDivAnswer ? \"correct-answer\" : \"\"}`}\n          onClick={() => {\n            checkAnswerRight();\n          }}\n        >\n          <h1>{PlayerTwoMetrics}</h1>\n          <img src={playerTwoGif} />\n        </div>\n\n        <div>\n          <p>{count}</p>\n          <p>{score}</p>\n        </div>\n        <button\n          onClick={() => {\n            getPlayer();\n            setCounter(count + 1);\n            setLeftDivAnswer(null);\n            setRightDivAnswer(null);\n          }}\n        >\n          Next Question\n        </button>\n      </>\n    );\n  }\n  return (\n    <>\n      <h1> Game Over</h1>\n      <p>\n        <Link to=\"/Results\">See Results</Link>\n      </p>\n    </>\n  );\n};\n\nexport default withRouter(Game);\n"]},"metadata":{},"sourceType":"module"}