{"ast":null,"code":"var _jsxFileName = \"/Users/zohaibkhan/Desktop/Education/General_Assembly/SEI/unit_2/week_3/Proj_2/NBA-Trivia/nba-trivia-app/src/Game.js\";\nimport React, { useState, useEffect, useParams } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Route, Link } from \"react-router-dom\";\nimport \"./Game.css\";\nimport Results from \"./Results\";\n\nconst Game = props => {\n  //All State Values that will be changed\n  const [playerOneStatsInfo, setPlayerOneStatsInfo] = useState([]);\n  const [playerTwoStatsInfo, setPlayerTwoStatsInfo] = useState([]);\n  const [PlayerOneMetrics, setPlayerOneMetrics] = useState([]);\n  const [PlayerTwoMetrics, setPlayerTwoMetrics] = useState([]);\n  const [playerOneGif, setPlayerOneGif] = useState(\"\");\n  const [playerTwoGif, setPlayerTwoGif] = useState(\"\");\n  const [count, setCounter] = useState(1);\n  const [score, setScore] = useState(0);\n  const [rightDivAnswer, setRightDivAnswer] = useState(null);\n  const [leftDivAnswer, setLeftDivAnswer] = useState(null);\n  const [ifClicked, setIfClicked] = useState(false);\n  const [paramVal, updateParamVal] = useState(\"\");\n  let params = useParams;\n\n  const apiCallStatsPlayerOne = async () => {\n    try {\n      let randomNum = Math.floor(Math.random() * 400 + 1);\n      const dataStats = await axios.get(`https://www.balldontlie.io/api/v1/season_averages?player_ids[]=${randomNum}`);\n      console.log(dataStats.data.data[0][props.match.params.myVar]);\n      setPlayerOneStatsInfo(dataStats.data.data[0][props.match.params.myVar]);\n      const dataGeneralInfo = await axios.get(`https://www.balldontlie.io/api/v1/players/${randomNum}`);\n      let playerOneFirstName = dataGeneralInfo.data.first_name;\n      let playerOneLastName = dataGeneralInfo.data.last_name;\n      setPlayerOneMetrics(playerOneFirstName + \" \" + playerOneLastName);\n      console.log(playerOneFirstName + \" \" + playerOneLastName);\n      const gifData = await axios.get(`https://api.giphy.com/v1/gifs/search?api_key=cLVkasFAvpiN8CTvAkRlGkoBTskbN71s&q=${playerOneFirstName + \"-\" + playerOneLastName}&limit=25&offset=0&rating=G&lang=en`);\n      setPlayerOneGif(gifData.data.data[0].images.downsized.url); // console.log(gifData.data.data[0].url);\n    } catch (error) {\n      if (error instanceof TypeError) {\n        apiCallStatsPlayerOne();\n      } else {\n        setTimeout(function () {\n          apiCallStatsPlayerOne();\n        }, 30000);\n        console.log(error);\n      }\n    }\n  };\n\n  const apiCallStatsPlayerTwo = async () => {\n    try {\n      let randomNum = Math.floor(Math.random() * 400);\n      const data = await axios.get(`https://www.balldontlie.io/api/v1/season_averages?player_ids[]=${randomNum}`);\n      console.log(data.data.data[0][props.match.params.myVar]);\n      setPlayerTwoStatsInfo(data.data.data[0][props.match.params.myVar]);\n      const dataGeneralInfo = await axios.get(`https://www.balldontlie.io/api/v1/players/${randomNum}`);\n      let playerTwoFirstName = dataGeneralInfo.data.first_name;\n      let playerTwoLastName = dataGeneralInfo.data.last_name;\n      setPlayerTwoMetrics(playerTwoFirstName + \" \" + playerTwoLastName);\n      console.log(playerTwoFirstName + \" \" + playerTwoLastName);\n      const gifData = await axios.get(`https://api.giphy.com/v1/gifs/search?api_key=cLVkasFAvpiN8CTvAkRlGkoBTskbN71s&q=${playerTwoFirstName + \"-\" + playerTwoLastName}&limit=1&offset=0&rating=G&lang=en`);\n      console.log(gifData.data.data[0]);\n      setPlayerTwoGif(gifData.data.data[0].images.downsized.url);\n    } catch (error) {\n      if (error instanceof TypeError) {\n        apiCallStatsPlayerTwo();\n      } else {\n        setTimeout(function () {\n          apiCallStatsPlayerTwo();\n        }, 30000);\n        console.log(error);\n      }\n    }\n  };\n\n  const getPlayer = () => {\n    apiCallStatsPlayerOne();\n    apiCallStatsPlayerTwo();\n  };\n\n  const checkAnswerLeft = () => {\n    if (playerOneStatsInfo > playerTwoStatsInfo) {\n      setScore(score + 1);\n      setLeftDivAnswer(\"correct-answer\");\n    } else {\n      setScore(score);\n      setLeftDivAnswer(\"incorrect-answer\");\n    }\n  };\n\n  const checkAnswerRight = () => {\n    if (playerOneStatsInfo < playerTwoStatsInfo) {\n      setScore(score + 1);\n      setRightDivAnswer(\"correct-answer\");\n    } else {\n      setScore(score);\n      setRightDivAnswer(\"incorrect-answer\");\n    }\n  };\n\n  const clickEvent = () => {\n    setIfClicked(true);\n  };\n\n  const gameType = () => {\n    if (props.match.params.myVar === \"pts\") {\n      updateParamVal(\"Points Per Game\");\n    } else if (props.match.params.myVar === \"ast\") {\n      updateParamVal(\"Assists Per Game\");\n    } else if (props.match.params.myVar === \"reb\") {\n      updateParamVal(\"Rebounds Per Game\");\n    } else if (props.match.params.myVar === \"stl\") {\n      updateParamVal(\"Steals Per Game\");\n    } else if (props.match.params.myVar === \"blk\") {\n      updateParamVal(\"Blocks Per Game\");\n    }\n  };\n\n  useEffect(() => {\n    apiCallStatsPlayerOne();\n    apiCallStatsPlayerTwo();\n  }, []);\n\n  while (count < 10) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }, () => {\n      if (props.match.params.myVar === \"pts\") {\n        updateParamVal(\"Points Per Game\");\n      } else if (props.match.params.myVar === \"ast\") {\n        updateParamVal(\"Assists Per Game\");\n      } else if (props.match.params.myVar === \"reb\") {\n        updateParamVal(\"Rebounds Per Game\");\n      } else if (props.match.params.myVar === \"stl\") {\n        updateParamVal(\"Steals Per Game\");\n      } else if (props.match.params.myVar === \"blk\") {\n        updateParamVal(\"Blocks Per Game\");\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `left-card both-div  ${leftDivAnswer}  `,\n      onClick: () => {\n        checkAnswerLeft();\n        clickEvent();\n      },\n      disabled: ifClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, PlayerOneMetrics), /*#__PURE__*/React.createElement(\"img\", {\n      src: playerOneGif,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: `right-card both-div ${rightDivAnswer}`,\n      onClick: () => {\n        checkAnswerRight();\n        clickEvent();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }, PlayerTwoMetrics), /*#__PURE__*/React.createElement(\"img\", {\n      src: playerTwoGif,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }\n    }, \"Question: \", count), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }, \"Current Score: \", score)), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        getPlayer();\n        setCounter(count + 1);\n        setLeftDivAnswer(null);\n        setRightDivAnswer(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }\n    }, \"Next Question\"));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Results, {\n    score: score,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default withRouter(Game);","map":{"version":3,"sources":["/Users/zohaibkhan/Desktop/Education/General_Assembly/SEI/unit_2/week_3/Proj_2/NBA-Trivia/nba-trivia-app/src/Game.js"],"names":["React","useState","useEffect","useParams","withRouter","axios","Route","Link","Results","Game","props","playerOneStatsInfo","setPlayerOneStatsInfo","playerTwoStatsInfo","setPlayerTwoStatsInfo","PlayerOneMetrics","setPlayerOneMetrics","PlayerTwoMetrics","setPlayerTwoMetrics","playerOneGif","setPlayerOneGif","playerTwoGif","setPlayerTwoGif","count","setCounter","score","setScore","rightDivAnswer","setRightDivAnswer","leftDivAnswer","setLeftDivAnswer","ifClicked","setIfClicked","paramVal","updateParamVal","params","apiCallStatsPlayerOne","randomNum","Math","floor","random","dataStats","get","console","log","data","match","myVar","dataGeneralInfo","playerOneFirstName","first_name","playerOneLastName","last_name","gifData","images","downsized","url","error","TypeError","setTimeout","apiCallStatsPlayerTwo","playerTwoFirstName","playerTwoLastName","getPlayer","checkAnswerLeft","checkAnswerRight","clickEvent","gameType"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useParams } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Route, Link } from \"react-router-dom\";\nimport \"./Game.css\";\nimport Results from \"./Results\";\n\nconst Game = (props) => {\n  //All State Values that will be changed\n  const [playerOneStatsInfo, setPlayerOneStatsInfo] = useState([]);\n  const [playerTwoStatsInfo, setPlayerTwoStatsInfo] = useState([]);\n  const [PlayerOneMetrics, setPlayerOneMetrics] = useState([]);\n  const [PlayerTwoMetrics, setPlayerTwoMetrics] = useState([]);\n  const [playerOneGif, setPlayerOneGif] = useState(\"\");\n  const [playerTwoGif, setPlayerTwoGif] = useState(\"\");\n  const [count, setCounter] = useState(1);\n  const [score, setScore] = useState(0);\n  const [rightDivAnswer, setRightDivAnswer] = useState(null);\n  const [leftDivAnswer, setLeftDivAnswer] = useState(null);\n  const [ifClicked, setIfClicked] = useState(false);\n  const [paramVal, updateParamVal] = useState(\"\");\n\n  let params = useParams;\n\n  const apiCallStatsPlayerOne = async () => {\n    try {\n      let randomNum = Math.floor(Math.random() * 400 + 1);\n      const dataStats = await axios.get(\n        `https://www.balldontlie.io/api/v1/season_averages?player_ids[]=${randomNum}`\n      );\n      console.log(dataStats.data.data[0][props.match.params.myVar]);\n      setPlayerOneStatsInfo(dataStats.data.data[0][props.match.params.myVar]);\n\n      const dataGeneralInfo = await axios.get(\n        `https://www.balldontlie.io/api/v1/players/${randomNum}`\n      );\n\n      let playerOneFirstName = dataGeneralInfo.data.first_name;\n      let playerOneLastName = dataGeneralInfo.data.last_name;\n\n      setPlayerOneMetrics(playerOneFirstName + \" \" + playerOneLastName);\n\n      console.log(playerOneFirstName + \" \" + playerOneLastName);\n\n      const gifData = await axios.get(\n        `https://api.giphy.com/v1/gifs/search?api_key=cLVkasFAvpiN8CTvAkRlGkoBTskbN71s&q=${\n          playerOneFirstName + \"-\" + playerOneLastName\n        }&limit=25&offset=0&rating=G&lang=en`\n      );\n\n      setPlayerOneGif(gifData.data.data[0].images.downsized.url);\n      // console.log(gifData.data.data[0].url);\n    } catch (error) {\n      if (error instanceof TypeError) {\n        apiCallStatsPlayerOne();\n      } else {\n        setTimeout(function () {\n          apiCallStatsPlayerOne();\n        }, 30000);\n        console.log(error);\n      }\n    }\n  };\n\n  const apiCallStatsPlayerTwo = async () => {\n    try {\n      let randomNum = Math.floor(Math.random() * 400);\n      const data = await axios.get(\n        `https://www.balldontlie.io/api/v1/season_averages?player_ids[]=${randomNum}`\n      );\n      console.log(data.data.data[0][props.match.params.myVar]);\n      setPlayerTwoStatsInfo(data.data.data[0][props.match.params.myVar]);\n\n      const dataGeneralInfo = await axios.get(\n        `https://www.balldontlie.io/api/v1/players/${randomNum}`\n      );\n\n      let playerTwoFirstName = dataGeneralInfo.data.first_name;\n      let playerTwoLastName = dataGeneralInfo.data.last_name;\n\n      setPlayerTwoMetrics(playerTwoFirstName + \" \" + playerTwoLastName);\n\n      console.log(playerTwoFirstName + \" \" + playerTwoLastName);\n\n      const gifData = await axios.get(\n        `https://api.giphy.com/v1/gifs/search?api_key=cLVkasFAvpiN8CTvAkRlGkoBTskbN71s&q=${\n          playerTwoFirstName + \"-\" + playerTwoLastName\n        }&limit=1&offset=0&rating=G&lang=en`\n      );\n      console.log(gifData.data.data[0]);\n\n      setPlayerTwoGif(gifData.data.data[0].images.downsized.url);\n    } catch (error) {\n      if (error instanceof TypeError) {\n        apiCallStatsPlayerTwo();\n      } else {\n        setTimeout(function () {\n          apiCallStatsPlayerTwo();\n        }, 30000);\n        console.log(error);\n      }\n    }\n  };\n\n  const getPlayer = () => {\n    apiCallStatsPlayerOne();\n    apiCallStatsPlayerTwo();\n  };\n\n  const checkAnswerLeft = () => {\n    if (playerOneStatsInfo > playerTwoStatsInfo) {\n      setScore(score + 1);\n      setLeftDivAnswer(\"correct-answer\");\n    } else {\n      setScore(score);\n      setLeftDivAnswer(\"incorrect-answer\");\n    }\n  };\n\n  const checkAnswerRight = () => {\n    if (playerOneStatsInfo < playerTwoStatsInfo) {\n      setScore(score + 1);\n      setRightDivAnswer(\"correct-answer\");\n    } else {\n      setScore(score);\n      setRightDivAnswer(\"incorrect-answer\");\n    }\n  };\n\n  const clickEvent = () => {\n    setIfClicked(true);\n  };\n\n  const gameType = () => {\n    if (props.match.params.myVar === \"pts\") {\n      updateParamVal(\"Points Per Game\");\n    } else if (props.match.params.myVar === \"ast\") {\n      updateParamVal(\"Assists Per Game\");\n    } else if (props.match.params.myVar === \"reb\") {\n      updateParamVal(\"Rebounds Per Game\");\n    } else if (props.match.params.myVar === \"stl\") {\n      updateParamVal(\"Steals Per Game\");\n    } else if (props.match.params.myVar === \"blk\") {\n      updateParamVal(\"Blocks Per Game\");\n    }\n  };\n\n  useEffect(() => {\n    apiCallStatsPlayerOne();\n    apiCallStatsPlayerTwo();\n  }, []);\n\n  while (count < 10) {\n    return (\n      <div className=\"body-container\">\n        <h1 className=\"title\">\n          {() => {\n            if (props.match.params.myVar === \"pts\") {\n              updateParamVal(\"Points Per Game\");\n            } else if (props.match.params.myVar === \"ast\") {\n              updateParamVal(\"Assists Per Game\");\n            } else if (props.match.params.myVar === \"reb\") {\n              updateParamVal(\"Rebounds Per Game\");\n            } else if (props.match.params.myVar === \"stl\") {\n              updateParamVal(\"Steals Per Game\");\n            } else if (props.match.params.myVar === \"blk\") {\n              updateParamVal(\"Blocks Per Game\");\n            }\n          }}\n        </h1>\n        <div className=\"cards\">\n          <div\n            className={`left-card both-div  ${leftDivAnswer}  `}\n            onClick={() => {\n              checkAnswerLeft();\n              clickEvent();\n            }}\n            disabled={ifClicked}\n          >\n            <h1>{PlayerOneMetrics}</h1>\n            <img src={playerOneGif}></img>\n          </div>\n\n          <div\n            className={`right-card both-div ${rightDivAnswer}`}\n            onClick={() => {\n              checkAnswerRight();\n              clickEvent();\n            }}\n          >\n            <h1>{PlayerTwoMetrics}</h1>\n            <img src={playerTwoGif} />\n          </div>\n        </div>\n        <div>\n          <p>Question: {count}</p>\n          <p>Current Score: {score}</p>\n        </div>\n        <button\n          onClick={() => {\n            getPlayer();\n            setCounter(count + 1);\n            setLeftDivAnswer(null);\n            setRightDivAnswer(null);\n          }}\n        >\n          Next Question\n        </button>\n      </div>\n    );\n  }\n  return (\n    <>\n      {/* <h1> Game Over</h1>\n      <p>\n        <Link to=\"/Results\">See Results</Link>\n      </p> */}\n\n      <Results score={score} />\n    </>\n  );\n};\n\nexport default withRouter(Game);\n"]},"metadata":{},"sourceType":"module"}